<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!--
		* root-context.xml
		서버 구동와 동시에 web.xml파일(배포서술자)을 거쳐서 바로 로딩되는 문서 
		=> 서버 구동와 동시에 bean으로 등록해야 하는 내용들을 작성
			주로 DB연결정보, 트랜잭션처리..
	 -->
	
	<!-- DB연결 설정 -->
	
	<!-- 메이븐에서 다운받은 ojdbc6-spring 안에있는 파일 빈등록 -->
	<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">
		<!-- 어느 DB에 접속할건지 지정 -->
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="SOSO"/>
		<property name="password" value="SOSO"/>	
	</bean>		
	<!-- 
		객체가 필요할 때마다 내부적으로 실행되는 코드
		BasicDataSource dataSource = new BasicDataSource();
		dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
		dataSource.setUrl("jdbc:oracle:thin:@localhost:1521:xe");
		dataSource.setUserName("SOSO");
		dataSouce.setPassword("SOSO");
	 -->
	 
	 
	 <!-- MyBatis Spring에서 제공하는 SQL명령어 실행을 위한 빈 등록 -->
	 <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
	 	<!-- mybatis 설정파일의 위치를 설정(src/main/resources)하여  설정값들 가져오겠다. (classpath: 가 resources 폴더를 의미함)-->
	 	<property name="configLocation" value="classpath:mybatis-config.xml"/>	 	
	 	<!-- 어떤 디비에 연결할건지 연결도구 참조 설정 -->
	 	<property name="dataSource" ref="dataSource"/>
	 </bean>	 
	 <!-- 
	 	객체가 필요할 때마다 내부적으로 이코드가 실행됨
	 	SqlSessionFactoryVean sqlSessionFactory = new SqlSessionFactoryBean();
	 	sqlSessionFactory.setConfigLocation("classpath:mybatis-config.xml");
	 	sqlSessionFactory.setDataSource(dataSource);	 
	  -->
	  
	  
	  <!-- SQL구문 실행을 위한  템플릿을 제공하는 빈등록-->
	 <bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
	 	<!-- SQL 명령어 실행을 위한 도구에 대한 참조 설정 -->
	 	<constructor-arg ref="sqlSessionFactory"/>	 	
	 </bean>
	 <!-- 
	 	객체가 필요할 때마다 내부적으로 이코드가 실행됨
	 	SqlSessionTemplate sqlSession = new SqlSessionTemplate(sqlSesionFactory);	 

	  -->
	  
	 <!--2022.2.21(월) 15h20 파일 업로드 관련 bean 등록; 업로드 파일 용량 무제한-->


	  

	  <!-- 파일 업로드 관련 빈 등록 -->
	  <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
	 	<property name="maxUploadSize" value="100000000" />
	 	<property name="maxInMemorySize" value="100000000" />
	 	
	 </bean>	  
	 
		<!-- 비밀번호 찾기 메일 인증번호 발송 (수정 전) -->
		<bean id="sender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
			<property name="host" value="smtp.gmail.com" />
			<property name="port" value="587" />
			<property name="username" value="wemasal2022@gmail.com" />
			<property name="password" value="wemasal2022!!" />
			
			<property name="javaMailProperties">
				<props>
					<prop key="mail.smtp.auth">true</prop>
					<prop key="mail.smtp.starttls.enable">true</prop>
					
				</props>
			</property>
		</bean>

	  


	  
</beans>
